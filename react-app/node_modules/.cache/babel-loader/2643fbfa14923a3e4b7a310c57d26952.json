{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\src\\\\scenes\\\\Home\\\\components\\\\PaginationCards\\\\PaginationCards.jsx\";\nimport React, { Component } from 'react';\nimport ProjTile from '../Projects/components/ProjTile/ProjTile';\nimport FeedbackCard from '../Projects/components/CardHolder/components/Card/FeedbackCard';\nimport { Grid } from '@material-ui/core';\nimport NEXT from './images/NEXT.png';\nimport PREV from './images/PREV.png';\n\nvar PaginationCards =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PaginationCards, _Component);\n\n  function PaginationCards() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PaginationCards);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PaginationCards)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: [],\n      todos: [],\n      currentPage: 1,\n      todosPerPage: _this.props.no,\n      checked: false\n    };\n\n    _this.resize = function () {\n      var Gwidth = document.body.clientWidth;\n\n      if (Gwidth < 600) {\n        _this.setState({\n          todosPerPage: 1\n        });\n      } else if (Gwidth < 960) {\n        _this.setState({\n          todosPerPage: 1\n        });\n      } else if (Gwidth < 1280) {\n        _this.setState({\n          todosPerPage: 2\n        });\n      } else if (Gwidth < 1920) {\n        _this.setState({\n          todosPerPage: 3\n        });\n      } else {\n        _this.setState({\n          todosPerPage: 4\n        });\n      }\n    };\n\n    _this.handleClick = function (event) {\n      console.log(event.target);\n\n      _this.setState({\n        currentPage: Number(event.target.id),\n        checked: false\n      });\n    };\n\n    _this.handlePrev = function (event) {\n      // console.log(event.target.parentElement.childNodes[6].childNodes)\n      if (_this.state.currentPage !== 1) _this.setState({\n        currentPage: _this.state.currentPage - 1\n      });\n    };\n\n    _this.handleNext = function (pageNumbers) {\n      // console.log(event.target.parentElement.childNodes[6].childNodes)\n      console.log(pageNumbers.length); // console.log(event)\n\n      var indexOfLastTodo = _this.state.currentPage * _this.state.todosPerPage;\n      if (_this.state.currentPage !== pageNumbers.length) _this.setState({\n        currentPage: _this.state.currentPage + 1\n      });\n    };\n\n    _this.componentDidUpdate = function (prevProps, prevState) {\n      if (prevProps !== _this.props) {\n        _this.setState({\n          todos: _this.props.data\n        });\n      }\n    };\n\n    _this.alterContent = function (content) {\n      var newContent = \"\";\n      var count = 0;\n      content = \"\".concat(content);\n      content.split(\" \").forEach(function (word) {\n        if (count !== 31) {\n          newContent += word + \" \";\n          count++;\n        }\n      });\n\n      if (count > 30) {\n        newContent += \". . . .\";\n      }\n\n      return newContent;\n    };\n\n    return _this;\n  }\n\n  _createClass(PaginationCards, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('resize', this.resize);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state);\n      var _this$state = this.state,\n          todos = _this$state.todos,\n          currentPage = _this$state.currentPage,\n          todosPerPage = _this$state.todosPerPage,\n          id = _this$state.id;\n      var indexOfLastTodo = currentPage * todosPerPage;\n      var indexOfFirstTodo = indexOfLastTodo - todosPerPage;\n      var currentTodos = todos.slice(indexOfFirstTodo, indexOfLastTodo);\n      var renderTodos = currentTodos.map(function (todo, index) {\n        console.log(todo.color);\n        return React.createElement(Grid, {\n          item: true,\n          xs: 10,\n          md: 6,\n          lg: 4,\n          xl: 3,\n          style: {\n            marginBottom: \"4%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(FeedbackCard, {\n          color: todo.color,\n          index: todo.id,\n          text: _this2.state.todos.length ? _this2.alterContent(_this2.state.todos[index].comments) : \"\",\n          pic: _this2.state.todos.length ? _this2.state.todos[index].photograph : \"\",\n          fname: _this2.state.todos.length ? _this2.state.todos[index].first_name : \"\",\n          lname: _this2.state.todos.length ? _this2.state.todos[index].last_name : \"\",\n          company: _this2.state.todos.length ? _this2.state.todos[index].company : \"\",\n          department: _this2.state.todos.length ? _this2.state.todos[index].department : \"\",\n          desgn: _this2.state.todos.length ? _this2.state.todos[index].designation : \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }));\n      });\n      var pageNumbers = [];\n\n      for (var i = 1; i <= Math.ceil(todos.length / todosPerPage); i++) {\n        pageNumbers.push(i);\n      }\n\n      var renderPageNumbers = pageNumbers.map(function (number) {\n        var breakTag = React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        });\n        return (// <li\n          //   key={number}\n          //   id={number}\n          //   style={{textAlign: \"center\"}}\n          //   onClick={this.handleClick}\n          // >\n          React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            id: number,\n            onClick: _this2.handleClick // #7FC4FD\n            ,\n            style: {\n              width: 20,\n              float: \"left\",\n              height: 20,\n              background: \"#7FC4FD\",\n              opacity: \"\".concat(number === _this2.state.currentPage ? \"1.0\" : \"0.3\"),\n              transition: \"linear 0.2s\",\n              borderRadius: 100,\n              margin: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }), number === 4 ? breakTag : \"\") // </li>\n\n        );\n      });\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, renderTodos, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        width: 50,\n        height: 50,\n        src: PREV,\n        onClick: this.handlePrev,\n        style: {\n          boxShadow: \"#d6d6d6 4px 4px 8px\",\n          borderRadius: 100,\n          marginRight: \"10%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        id: \"page-numbers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, renderPageNumbers), React.createElement(\"img\", {\n        width: 50,\n        height: 50,\n        src: NEXT,\n        onClick: function onClick(e) {\n          return _this2.handleNext(pageNumbers, e);\n        },\n        style: {\n          boxShadow: \"#d6d6d6 4px 4px 8px\",\n          borderRadius: 100,\n          marginLeft: \"10%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PaginationCards;\n}(Component);\n\nexport default PaginationCards;","map":{"version":3,"sources":["C:\\Users\\Swapnil Kadakia\\Desktop\\website\\unicode-website-dev-temp\\react-app\\src\\scenes\\Home\\components\\PaginationCards\\PaginationCards.jsx"],"names":["React","Component","ProjTile","FeedbackCard","Grid","NEXT","PREV","PaginationCards","state","data","todos","currentPage","todosPerPage","props","no","checked","resize","Gwidth","document","body","clientWidth","setState","handleClick","event","console","log","target","Number","id","handlePrev","handleNext","pageNumbers","length","indexOfLastTodo","componentDidUpdate","prevProps","prevState","alterContent","content","newContent","count","split","forEach","word","window","addEventListener","indexOfFirstTodo","currentTodos","slice","renderTodos","map","todo","index","color","marginBottom","comments","photograph","first_name","last_name","company","department","designation","i","Math","ceil","push","renderPageNumbers","number","breakTag","width","float","height","background","opacity","transition","borderRadius","margin","boxShadow","marginRight","e","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ProjTile from '../Projects/components/ProjTile/ProjTile';\r\nimport FeedbackCard from '../Projects/components/CardHolder/components/Card/FeedbackCard';\r\nimport { Grid } from '@material-ui/core';\r\nimport NEXT from './images/NEXT.png';\r\nimport PREV from './images/PREV.png';\r\n\r\nclass PaginationCards extends Component {\r\n    state = {\r\n        data: [],\r\n        todos: [],\r\n        currentPage: 1,\r\n        todosPerPage: this.props.no,\r\n        checked: false\r\n     }\r\n     resize = () =>{\r\n        let Gwidth=document.body.clientWidth\r\n        if(Gwidth<600){\r\n            this.setState({todosPerPage: 1})\r\n        }\r\n        else if(Gwidth<960){\r\n            this.setState({todosPerPage: 1})\r\n        }\r\n        else if(Gwidth<1280){\r\n            this.setState({todosPerPage: 2})\r\n        }\r\n        else if(Gwidth<1920){\r\n            this.setState({todosPerPage: 3})\r\n        }\r\n        else{\r\n            this.setState({todosPerPage: 4})\r\n        }\r\n     }\r\n     componentDidMount() {\r\n        window.addEventListener('resize', this.resize)\r\n      }\r\n     handleClick=(event)=>{\r\n        console.log(event.target)\r\n        this.setState({\r\n          currentPage: Number(event.target.id),\r\n          checked: false\r\n        });\r\n      }\r\n      handlePrev=(event)=>{\r\n        // console.log(event.target.parentElement.childNodes[6].childNodes)\r\n        if(this.state.currentPage!==1)\r\n        this.setState({currentPage: this.state.currentPage-1})\r\n      }\r\n      handleNext=(pageNumbers)=>{\r\n        // console.log(event.target.parentElement.childNodes[6].childNodes)\r\n        console.log(pageNumbers.length)\r\n        // console.log(event)\r\n        const indexOfLastTodo = this.state.currentPage * this.state.todosPerPage;\r\n        if(this.state.currentPage!==pageNumbers.length)\r\n        this.setState({currentPage: this.state.currentPage+1})\r\n      }\r\n      componentDidUpdate=(prevProps,prevState)=>{\r\n          if(prevProps!==this.props){\r\n              this.setState({todos: this.props.data})\r\n          }\r\n      }\r\n      alterContent=(content)=>{\r\n        var newContent=\"\"\r\n        var count=0\r\n        content=`${content}`\r\n        content.split(\" \").forEach((word)=>{\r\n            if(count!==31){\r\n                newContent+=word+\" \"\r\n                count++;\r\n            }\r\n        })\r\n        if (count>30){\r\n            newContent+=\". . . .\"\r\n        }\r\n        return newContent\r\n    }\r\n    render() { \r\n        console.log(this.state)\r\n        const { todos, currentPage, todosPerPage, id } = this.state;\r\n        const indexOfLastTodo = currentPage * todosPerPage;\r\n        const indexOfFirstTodo = indexOfLastTodo - todosPerPage;\r\n        var currentTodos = todos.slice(indexOfFirstTodo, indexOfLastTodo);\r\n\r\n        const renderTodos = currentTodos.map((todo, index) => {\r\n            console.log(todo.color)\r\n            return (\r\n                <Grid item xs={10} md={6} lg={4} xl={3} style={{marginBottom: \"4%\"}} >\r\n                    <FeedbackCard\r\n                    color={todo.color}\r\n                    index={todo.id} \r\n                    text={this.state.todos.length?this.alterContent(this.state.todos[index].comments):\"\"}\r\n                    pic={this.state.todos.length?this.state.todos[index].photograph:\"\"}\r\n                    fname={this.state.todos.length?this.state.todos[index].first_name:\"\"}\r\n                    lname={this.state.todos.length?this.state.todos[index].last_name:\"\"}\r\n                    company={this.state.todos.length?this.state.todos[index].company:\"\"}\r\n                    department={this.state.todos.length?this.state.todos[index].department:\"\"}\r\n                    desgn={this.state.todos.length?this.state.todos[index].designation:\"\"}\r\n                    />\r\n                </Grid>\r\n            );\r\n        });\r\n\r\n        const pageNumbers = [];\r\n        for (let i = 1; i <= Math.ceil(todos.length / todosPerPage); i++) {\r\n            pageNumbers.push(i);\r\n        }\r\n\r\n    const renderPageNumbers = pageNumbers.map(number => {\r\n      const breakTag = <br/>\r\n      return (\r\n        // <li\r\n        //   key={number}\r\n        //   id={number}\r\n        //   style={{textAlign: \"center\"}}\r\n        //   onClick={this.handleClick}\r\n        // >\r\n        <React.Fragment>\r\n            <div \r\n            id={number}\r\n            onClick={this.handleClick}\r\n            // #7FC4FD\r\n            style={{\r\n              width: 20,\r\n              float: \"left\",\r\n              height: 20,\r\n              background: \"#7FC4FD\",\r\n              opacity: `${number===this.state.currentPage?\"1.0\":\"0.3\"}`,\r\n              transition: \"linear 0.2s\",\r\n              borderRadius: 100,\r\n              margin:10\r\n              }} >\r\n            </div>\r\n            {number===4?breakTag:\"\"}\r\n        </React.Fragment>\r\n        // </li>\r\n      );\r\n    });\r\n\r\n\r\n        return ( \r\n            <React.Fragment>\r\n                {/* <div style={{textAlign: \"center\"}} > */}\r\n                    {/* <ul> */}\r\n                    {renderTodos}\r\n                    {/* </ul> */}\r\n                    <Grid item xs={12}></Grid>\r\n                    <img\r\n                    width={50}\r\n                    height={50}\r\n                    src={PREV}\r\n                    onClick={this.handlePrev}\r\n                    style={{boxShadow: \"#d6d6d6 4px 4px 8px\",borderRadius: 100,marginRight: \"10%\"}}\r\n                    >\r\n                    </img>\r\n\r\n                    <ul id=\"page-numbers\">\r\n                    {renderPageNumbers}\r\n                    </ul>\r\n\r\n                    <img\r\n                    width={50}\r\n                    height={50}\r\n                    src={NEXT}\r\n                    onClick={(e)=>this.handleNext(pageNumbers,e)}\r\n                    style={{boxShadow: \"#d6d6d6 4px 4px 8px\",borderRadius: 100,marginLeft: \"10%\"}}\r\n                    >\r\n                    </img>\r\n                {/* </div> */}\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default PaginationCards;"]},"metadata":{},"sourceType":"module"}