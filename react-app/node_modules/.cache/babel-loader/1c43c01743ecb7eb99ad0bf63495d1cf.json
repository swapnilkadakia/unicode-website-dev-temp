{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\src\\\\scenes\\\\Home\\\\components\\\\Pagination\\\\Pagination.jsx\";\nimport React, { Component } from 'react';\nimport ProjTile from '../Projects/components/ProjTile/ProjTile';\nimport { Grid } from '@material-ui/core';\n\nvar Pagination =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Pagination, _Component);\n\n  function Pagination() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Pagination);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Pagination)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      todos: ['0', '1', '2', '3'],\n      projectsData: [],\n      currentPage: 1,\n      todosPerPage: 1,\n      checked: false\n    };\n\n    _this.handleClick = function (event) {\n      console.log(event.target);\n\n      _this.setState({\n        currentPage: Number(event.target.id),\n        checked: false\n      });\n    };\n\n    _this.handleNext = function (pageNumbers) {\n      var indexOfLastTodo = _this.state.currentPage * _this.state.todosPerPage;\n\n      if (_this.state.currentPage !== pageNumbers) {\n        _this.setState({\n          currentPage: _this.state.currentPage + 1\n        });\n      } else {\n        _this.setState({\n          currentPage: 1\n        });\n      }\n    };\n\n    _this.componentDidUpdate = function (prevProps, prevState) {\n      if (prevProps !== _this.props) {\n        _this.setState({\n          projectsData: _this.props.data\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Pagination, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      setInterval(function () {\n        _this2.handleNext(4);\n      }, 8000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(this.state);\n      var _this$state = this.state,\n          todos = _this$state.todos,\n          currentPage = _this$state.currentPage,\n          todosPerPage = _this$state.todosPerPage;\n      var indexOfLastTodo = currentPage * todosPerPage;\n      var indexOfFirstTodo = indexOfLastTodo - todosPerPage;\n      var currentTodos = todos.slice(indexOfFirstTodo, indexOfLastTodo);\n      var renderTodos = currentTodos.map(function (todo, index) {\n        return React.createElement(ProjTile, {\n          id: todo,\n          checked: _this3.state.checked,\n          projName: _this3.state.projectsData.length ? _this3.state.projectsData[todo].title : \"\",\n          text: _this3.state.projectsData.length ? _this3.state.projectsData[todo].description : \"\",\n          cover: _this3.state.projectsData.length ? _this3.state.projectsData[todo].cover : \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      });\n      var pageNumbers = [];\n\n      for (var i = 1; i <= Math.ceil(todos.length / todosPerPage); i++) {\n        pageNumbers.push(i);\n      }\n\n      var renderPageNumbers = pageNumbers.map(function (number) {\n        return (// <li\n          //   key={number}\n          //   id={number}\n          //   style={{textAlign: \"center\"}}\n          //   onClick={this.handleClick}\n          // >\n          React.createElement(\"div\", {\n            id: number,\n            onClick: _this3.handleClick // #7FC4FD\n            ,\n            style: {\n              width: 20,\n              float: \"left\",\n              height: 20,\n              background: \"\".concat(number === _this3.state.currentPage ? \"#fff\" : \"#cccccc\"),\n              opacity: \"\".concat(number === _this3.state.currentPage ? \"0.8\" : \"0.5\"),\n              transition: \"linear 0.2s\",\n              borderRadius: 100,\n              margin: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }) // </li>\n\n        );\n      });\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, renderTodos), React.createElement(Grid, {\n        item: true,\n        style: {\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, renderPageNumbers));\n    }\n  }]);\n\n  return Pagination;\n}(Component);\n\nexport default Pagination;","map":{"version":3,"sources":["C:\\Users\\Swapnil Kadakia\\Desktop\\website\\unicode-website-dev-temp\\react-app\\src\\scenes\\Home\\components\\Pagination\\Pagination.jsx"],"names":["React","Component","ProjTile","Grid","Pagination","state","todos","projectsData","currentPage","todosPerPage","checked","handleClick","event","console","log","target","setState","Number","id","handleNext","pageNumbers","indexOfLastTodo","componentDidUpdate","prevProps","prevState","props","data","setInterval","indexOfFirstTodo","currentTodos","slice","renderTodos","map","todo","index","length","title","description","cover","i","Math","ceil","push","renderPageNumbers","number","width","float","height","background","opacity","transition","borderRadius","margin","padding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ProjTile from '../Projects/components/ProjTile/ProjTile';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nclass Pagination extends Component {\r\n    state = { \r\n        todos: ['0','1','2','3'],\r\n        projectsData: [],\r\n        currentPage: 1,\r\n        todosPerPage: 1,\r\n        checked: false\r\n     }\r\n     handleClick=(event)=>{\r\n        console.log(event.target)\r\n        this.setState({\r\n          currentPage: Number(event.target.id),\r\n          checked: false\r\n        });\r\n      }\r\n      handleNext=(pageNumbers)=>{\r\n        const indexOfLastTodo = this.state.currentPage * this.state.todosPerPage;\r\n        if(this.state.currentPage!==pageNumbers){\r\n          this.setState({currentPage: this.state.currentPage+1})\r\n        }\r\n        else{\r\n          this.setState({currentPage: 1})\r\n        }\r\n      }\r\n      componentDidMount() {\r\n        setInterval(() => {\r\n           this.handleNext(4)\r\n        }, 8000)\r\n      }\r\n      componentDidUpdate=(prevProps,prevState)=>{\r\n        if(prevProps!==this.props){\r\n          this.setState({projectsData: this.props.data})\r\n        }\r\n      }\r\n    render() { \r\n      console.log(this.state)\r\n        const { todos, currentPage, todosPerPage } = this.state;\r\n        const indexOfLastTodo = currentPage * todosPerPage;\r\n        const indexOfFirstTodo = indexOfLastTodo - todosPerPage;\r\n        const currentTodos = todos.slice(indexOfFirstTodo, indexOfLastTodo);\r\n\r\n        const renderTodos = currentTodos.map((todo, index) => {\r\n            return (\r\n              <ProjTile\r\n              id={todo} \r\n              checked={this.state.checked} \r\n              projName={this.state.projectsData.length?this.state.projectsData[todo].title:\"\"}\r\n              text={this.state.projectsData.length?this.state.projectsData[todo].description:\"\"}\r\n              cover={this.state.projectsData.length?this.state.projectsData[todo].cover:\"\"}\r\n              />\r\n            );\r\n        });\r\n\r\n        const pageNumbers = [];\r\n        for (let i = 1; i <= Math.ceil(todos.length / todosPerPage); i++) {\r\n            pageNumbers.push(i);\r\n        }\r\n\r\n    const renderPageNumbers = pageNumbers.map(number => {\r\n      return (\r\n        // <li\r\n        //   key={number}\r\n        //   id={number}\r\n        //   style={{textAlign: \"center\"}}\r\n        //   onClick={this.handleClick}\r\n        // >\r\n          <div \r\n          id={number}\r\n          onClick={this.handleClick}\r\n          // #7FC4FD\r\n          style={{\r\n            width: 20,\r\n            float: \"left\",\r\n            height: 20,\r\n            background: `${number===this.state.currentPage?\"#fff\":\"#cccccc\"}`,\r\n            opacity: `${number===this.state.currentPage?\"0.8\":\"0.5\"}`,\r\n            transition: \"linear 0.2s\",\r\n            borderRadius: 100,\r\n            margin:10}} >\r\n          </div>\r\n        // </li>\r\n      );\r\n    });\r\n\r\n\r\n        return ( \r\n            <React.Fragment>\r\n                {/* <div style={{textAlign: \"center\"}} >\r\n                    <ul>\r\n                    {renderTodos}\r\n                    </ul>\r\n                    <br/>\r\n                    <ul id=\"page-numbers\"\r\n                    style={{marginLeft: \"50%\",transform: \"translateX(-80%)\"}}\r\n                    >\r\n                    {renderPageNumbers}\r\n                    </ul>\r\n                </div> */}\r\n                <Grid item xs={12}>\r\n                  {renderTodos}\r\n                </Grid>\r\n                <Grid item style={{padding: 10}} >\r\n                  {renderPageNumbers}\r\n                </Grid>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}