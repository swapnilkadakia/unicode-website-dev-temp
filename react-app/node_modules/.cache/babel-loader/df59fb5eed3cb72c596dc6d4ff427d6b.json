{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\src\\\\scenes\\\\Home\\\\components\\\\Projects\\\\components\\\\ProjTile\\\\ProjTile.jsx\";\nimport React, { Component } from 'react';\nimport ProjImg from './images/projImg.png';\nimport { Grid, Zoom, Slide } from '@material-ui/core';\nimport ViewButton from './components/ViewButton/ViewButton';\n\nvar ProjTile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProjTile, _Component);\n\n  function ProjTile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProjTile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProjTile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      checked: true,\n      direction: \"left\",\n      Gwidth: document.body.clientWidth\n    };\n    _this.style = {\n      font: {\n        fontFamily: \"'Open Sans', sans-serif\",\n        fontWeight: \"400\",\n        fontSize: 24,\n        color: \"#FFFFFF\",\n        lineHeight: \"33px\",\n        textAlign: \"left\"\n      }\n    };\n\n    _this.resize = function () {\n      _this.setState({\n        Gwidth: document.body.clientWidth\n      });\n    };\n\n    _this.componentWillReceiveProps = function () {\n      setTimeout(function () {\n        _this.setState({\n          direction: \"right\",\n          checked: false\n        });\n      }, 0);\n      setTimeout(function () {\n        _this.setState({\n          direction: \"left\",\n          checked: true\n        });\n      }, 600);\n    };\n\n    _this.alterContent = function (content) {\n      var newContent = \"\";\n      var count = 0;\n      content = \"\".concat(content);\n      content.split(\" \").forEach(function (word) {\n        if (count !== 15) {\n          newContent += word + \" \";\n          count++;\n        }\n      });\n      return \"\".concat(newContent, \". . . .\");\n    };\n\n    return _this;\n  }\n\n  _createClass(ProjTile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('resize', this.resize);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.state)\n      var conditionalStyling = {\n        projName: {\n          fontSize: 30,\n          fontWeight: 500,\n          textAlign: this.state.Gwidth < 960 ? \"center\" : \"left\"\n        },\n        text: {\n          padding: \"10% 2% 10% 0%\",\n          textAlign: this.state.Gwidth < 960 ? \"center\" : \"left\"\n        }\n      };\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Slide, {\n        in: this.state.checked,\n        direction: this.state.direction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        style: this.style.font,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        lg: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: {\n          borderRadius: \"50%\"\n        },\n        src: this.props.cover || ProjImg,\n        width: \"100%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        style: {\n          padding: \"8% 0%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        style: conditionalStyling.projName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.props.projName), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        style: conditionalStyling.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.alterContent(this.props.text)), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: this.state.Gwidth < 960 ? \"center\" : \"flex-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 7,\n        sm: 5,\n        md: 4,\n        xl: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(ViewButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })))))))));\n    }\n  }]);\n\n  return ProjTile;\n}(Component);\n\nexport default ProjTile;","map":{"version":3,"sources":["C:\\Users\\Swapnil Kadakia\\Desktop\\website\\unicode-website-dev-temp\\react-app\\src\\scenes\\Home\\components\\Projects\\components\\ProjTile\\ProjTile.jsx"],"names":["React","Component","ProjImg","Grid","Zoom","Slide","ViewButton","ProjTile","state","checked","direction","Gwidth","document","body","clientWidth","style","font","fontFamily","fontWeight","fontSize","color","lineHeight","textAlign","resize","setState","componentWillReceiveProps","setTimeout","alterContent","content","newContent","count","split","forEach","word","window","addEventListener","conditionalStyling","projName","text","padding","borderRadius","props","cover"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ProjImg from './images/projImg.png'\r\nimport { Grid, Zoom, Slide } from '@material-ui/core';\r\nimport ViewButton from './components/ViewButton/ViewButton';\r\n\r\nclass ProjTile extends Component {\r\n    state = { \r\n        checked: true,\r\n        direction: \"left\",\r\n        Gwidth: document.body.clientWidth\r\n    }\r\n    style={\r\n        font:{\r\n            fontFamily: \"'Open Sans', sans-serif\",\r\n            fontWeight: \"400\",\r\n            fontSize: 24,\r\n            color: \"#FFFFFF\",\r\n            lineHeight: \"33px\",\r\n            textAlign: \"left\"\r\n        }\r\n    }\r\n    resize=()=>{\r\n        this.setState({Gwidth: document.body.clientWidth})\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.resize)\r\n    }\r\n    componentWillReceiveProps=()=>{\r\n        setTimeout(()=>{\r\n            this.setState({\r\n                direction: \"right\",\r\n                checked: false\r\n            })\r\n          }, 0);\r\n          setTimeout(()=>{\r\n            this.setState({\r\n                direction: \"left\",\r\n                checked: true\r\n            })\r\n          }, 600);\r\n    }\r\n    alterContent=(content)=>{\r\n        var newContent=\"\"\r\n        var count=0\r\n        content=`${content}`\r\n        content.split(\" \").forEach((word)=>{\r\n            if(count!==15){\r\n                newContent+=word+\" \"\r\n                count++;\r\n            }\r\n        })\r\n        return `${newContent}. . . .`\r\n    }\r\n    render() { \r\n        // console.log(this.state)\r\n        let conditionalStyling={\r\n            projName:{\r\n                fontSize: 30,\r\n                fontWeight: 500,\r\n                textAlign: this.state.Gwidth<960?\"center\":\"left\"\r\n            },\r\n            text:{\r\n                padding: \"10% 2% 10% 0%\",\r\n                textAlign: this.state.Gwidth<960?\"center\":\"left\"\r\n            }\r\n        }\r\n        return ( \r\n            <React.Fragment>\r\n                <Slide in={this.state.checked} direction={this.state.direction} >\r\n                <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                style={this.style.font}\r\n                >\r\n                    <Grid item xs={12} md={4} lg={4} >\r\n                        <img style={{borderRadius: \"50%\"}} src={this.props.cover||ProjImg} width=\"100%\" ></img>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={1}>\r\n                        \r\n                    </Grid>\r\n                    <Grid item xs={12} md={7}>\r\n                        <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        style={{padding: \"8% 0%\"}}\r\n                        >\r\n                            <Grid item xs={12} style={conditionalStyling.projName} >\r\n                                {this.props.projName}\r\n                            </Grid>\r\n                            <Grid item xs={12} style={conditionalStyling.text} >\r\n                                {this.alterContent(this.props.text)}\r\n                            </Grid>\r\n                            <Grid item xs={12} >\r\n                                <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                justify={this.state.Gwidth<960?\"center\":\"flex-start\"}\r\n                                >\r\n                                    <Grid item xs={7} sm={5} md={4} xl={3} >\r\n                                        <ViewButton />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                </Slide>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ProjTile;"]},"metadata":{},"sourceType":"module"}