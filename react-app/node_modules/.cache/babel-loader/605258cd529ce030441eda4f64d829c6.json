{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Swapnil Kadakia\\\\Desktop\\\\website\\\\unicode-website-dev-temp\\\\react-app\\\\src\\\\scenes\\\\Home\\\\components\\\\Projects\\\\components\\\\CardHolder\\\\components\\\\CardGrid\\\\CardGrid.jsx\";\nimport React, { Component } from 'react';\nimport { Grid } from '@material-ui/core';\nimport FeedbackCard from '../Card/FeedbackCard';\nimport PaginationCards from '../../../../../PaginationCards/PaginationCards';\nimport axios from 'axios';\nimport { timingSafeEqual } from 'crypto';\n\nvar CardGrid =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CardGrid, _Component);\n\n  function CardGrid() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CardGrid);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CardGrid)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      postReview: []\n    };\n\n    _this.getData = function (p) {\n      // axios.get(`https://jsonplaceholder.typicode.com/posts?userId=${p||this.state.page}`)\n      // /?limit=2&offset=${p*2-2}\n      axios.get(\"http://localhost:8000/api/postreview/\").then(function (response) {\n        console.log(response.data.results);\n\n        _this.setState({\n          postReview: _this.setColor(response.data)\n        });\n      }).catch(function (e) {\n        return console.log(e);\n      });\n    };\n\n    _this.getColor = function (index) {\n      switch (index) {\n        case 0:\n          return '#445DFF';\n\n        case 1:\n          return '#FF7171';\n\n        case 2:\n          return '#F3D670';\n\n        case 3:\n          return '#C1D37F';\n      }\n    };\n\n    _this.setColor = function (array) {\n      var color = undefined;\n      var counter = 0;\n      array.forEach(function (e) {\n        e['id'] = counter;\n        counter++;\n      });\n      array.forEach(function (e) {\n        e['color'] = _this.getColor(e.id);\n      });\n      return array;\n    };\n\n    _this.getNumberOfCards = function () {\n      var Gwidth = document.body.clientWidth;\n      console.log(Gwidth);\n\n      if (Gwidth < 600) {\n        return 1;\n      } else if (Gwidth < 960) {\n        return 1;\n      } else if (Gwidth < 1280) {\n        return 2;\n      } else if (Gwidth < 1920) {\n        return 3;\n      } else {\n        return 4;\n      }\n    };\n\n    _this.componentWillMount = function () {\n      _this.getData();\n    };\n\n    return _this;\n  }\n\n  _createClass(CardGrid, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        spacing: 40,\n        style: {\n          width: \"100%\",\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(PaginationCards, {\n        data: this.state.postReview,\n        no: this.getNumberOfCards(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CardGrid;\n}(Component);\n\nexport default CardGrid;","map":{"version":3,"sources":["C:\\Users\\Swapnil Kadakia\\Desktop\\website\\unicode-website-dev-temp\\react-app\\src\\scenes\\Home\\components\\Projects\\components\\CardHolder\\components\\CardGrid\\CardGrid.jsx"],"names":["React","Component","Grid","FeedbackCard","PaginationCards","axios","timingSafeEqual","CardGrid","state","postReview","getData","p","get","then","response","console","log","data","results","setState","setColor","catch","e","getColor","index","array","color","undefined","counter","forEach","id","getNumberOfCards","Gwidth","document","body","clientWidth","componentWillMount","width","margin"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,eAAP,MAA4B,gDAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,QAAhC;;IAEMC,Q;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,UAAU,EAAE;AADR,K;;UAGRC,O,GAAQ,UAACC,CAAD,EAAK;AACT;AACA;AACAN,MAAAA,KAAK,CAACO,GAAN,0CACCC,IADD,CACM,UAACC,QAAD,EAAY;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,OAA1B;;AACA,cAAKC,QAAL,CAAc;AACVV,UAAAA,UAAU,EAAE,MAAKW,QAAL,CAAcN,QAAQ,CAACG,IAAvB;AADF,SAAd;AAGH,OAND,EAOCI,KAPD,CAOO,UAAAC,CAAC;AAAA,eAAEP,OAAO,CAACC,GAAR,CAAYM,CAAZ,CAAF;AAAA,OAPR;AAQH,K;;UACDC,Q,GAAS,UAACC,KAAD,EAAS;AACd,cAAOA,KAAP;AACI,aAAK,CAAL;AACI,iBAAO,SAAP;;AACJ,aAAK,CAAL;AACI,iBAAO,SAAP;;AACJ,aAAK,CAAL;AACI,iBAAO,SAAP;;AACJ,aAAK,CAAL;AACI,iBAAO,SAAP;AARR;AAUH,K;;UACDJ,Q,GAAS,UAACK,KAAD,EAAS;AACd,UAAIC,KAAK,GAACC,SAAV;AACA,UAAIC,OAAO,GAAC,CAAZ;AACAH,MAAAA,KAAK,CAACI,OAAN,CAAc,UAAAP,CAAC,EAAE;AACbA,QAAAA,CAAC,CAAC,IAAD,CAAD,GAAUM,OAAV;AACAA,QAAAA,OAAO;AACV,OAHD;AAIAH,MAAAA,KAAK,CAACI,OAAN,CAAc,UAAAP,CAAC,EAAE;AACbA,QAAAA,CAAC,CAAC,OAAD,CAAD,GAAa,MAAKC,QAAL,CAAcD,CAAC,CAACQ,EAAhB,CAAb;AACH,OAFD;AAGA,aAAOL,KAAP;AACH,K;;UACDM,gB,GAAiB,YAAI;AACjB,UAAIC,MAAM,GAACC,QAAQ,CAACC,IAAT,CAAcC,WAAzB;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,MAAZ;;AACA,UAAGA,MAAM,GAAC,GAAV,EAAc;AACV,eAAO,CAAP;AACH,OAFD,MAGK,IAAGA,MAAM,GAAC,GAAV,EAAc;AACf,eAAO,CAAP;AACH,OAFI,MAGA,IAAGA,MAAM,GAAC,IAAV,EAAe;AAChB,eAAO,CAAP;AACH,OAFI,MAGA,IAAGA,MAAM,GAAC,IAAV,EAAe;AAChB,eAAO,CAAP;AACH,OAFI,MAGD;AACA,eAAO,CAAP;AACH;AACH,K;;UACDI,kB,GAAmB,YAAI;AACnB,YAAK1B,OAAL;AACH,K;;;;;;;6BACO;AACL,aACI,oBAAC,IAAD;AACA,QAAA,SAAS,MADT;AAEA,QAAA,SAAS,EAAC,KAFV;AAGA,QAAA,OAAO,EAAC,QAHR;AAIA,QAAA,OAAO,EAAE,EAJT;AAKA,QAAA,KAAK,EAAE;AAAC2B,UAAAA,KAAK,EAAE,MAAR;AAAeC,UAAAA,MAAM,EAAE;AAAvB,SALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAE,KAAK9B,KAAL,CAAWC,UAAlC;AAA8C,QAAA,EAAE,EAAE,KAAKsB,gBAAL,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CADJ;AAWH;;;;EA1EkB9B,S;;AA6EvB,eAAeM,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport FeedbackCard from '../Card/FeedbackCard';\r\nimport PaginationCards from '../../../../../PaginationCards/PaginationCards';\r\nimport axios from 'axios';\r\nimport { timingSafeEqual } from 'crypto';\r\n\r\nclass CardGrid extends Component {\r\n    state = { \r\n        postReview: []\r\n     }\r\n    getData=(p)=>{\r\n        // axios.get(`https://jsonplaceholder.typicode.com/posts?userId=${p||this.state.page}`)\r\n        // /?limit=2&offset=${p*2-2}\r\n        axios.get(`http://localhost:8000/api/postreview/`)\r\n        .then((response)=>{\r\n            console.log(response.data.results)\r\n            this.setState({\r\n                postReview: this.setColor(response.data)\r\n            })\r\n        })\r\n        .catch(e=>console.log(e))\r\n    }\r\n    getColor=(index)=>{\r\n        switch(index){\r\n            case 0:\r\n                return '#445DFF'\r\n            case 1:\r\n                return '#FF7171'\r\n            case 2:\r\n                return '#F3D670'\r\n            case 3:\r\n                return '#C1D37F'\r\n        }\r\n    }\r\n    setColor=(array)=>{\r\n        var color=undefined\r\n        var counter=0\r\n        array.forEach(e=>{\r\n            e['id'] = counter\r\n            counter++\r\n        })\r\n        array.forEach(e=>{\r\n            e['color'] = this.getColor(e.id)\r\n        })\r\n        return array\r\n    }\r\n    getNumberOfCards=()=>{\r\n        let Gwidth=document.body.clientWidth\r\n        console.log(Gwidth)\r\n        if(Gwidth<600){\r\n            return 1\r\n        }\r\n        else if(Gwidth<960){\r\n            return 1\r\n        }\r\n        else if(Gwidth<1280){\r\n            return 2\r\n        }\r\n        else if(Gwidth<1920){\r\n            return 3\r\n        }\r\n        else{\r\n            return 4\r\n        }\r\n     }\r\n     componentWillMount=()=>{\r\n         this.getData()\r\n     }\r\n    render() { \r\n        return ( \r\n            <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            spacing={40}\r\n            style={{width: \"100%\",margin: 0}}\r\n            >\r\n                <PaginationCards data={this.state.postReview} no={this.getNumberOfCards()} />\r\n            </Grid>\r\n         );\r\n    }\r\n}\r\n \r\nexport default CardGrid;"]},"metadata":{},"sourceType":"module"}